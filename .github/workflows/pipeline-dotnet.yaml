name: Reusable Workflow - dotnet

env:
  PUBLISHED_ROOT: './publish_output'  

on:
  workflow_call:
    inputs:
      dotnet-version:
        description: "dotnet version"
        required: false
        type: string
      
      project-path:
        description: "path to project"
        required: false
        type: string

jobs:
  dotnet-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Enter project folder
        run: cd ${{ inputs.project-path }}
      
      - name: Restore dependencies
        run: dotnet restore

      - name: Build with dotnet
        run: dotnet build --configuration Release --no-restore

      # - name: Sonatype Evaluate
      #   id: evaluate
      #   uses: sonatype/actions/evaluate@v1
      #   with:
      #     iq-server-url: ${{ secrets.SONATYPE_SERVER_URL }}
      #     username: ${{ secrets.SONATYPE_USERNAME }}
      #     password: ${{ secrets.SONATYPE_PASSWORD }}
      #     application-id: ${{ secrets.SONATYPE_APP_ID }}
      #     scan-targets: '**/bin/Release/**/*.dll **/bin/Release/**/*.nupkg'
      
      # - name: Log evaluate action output
      #   run: echo "${{ steps.evaluate.outputs.scan-id }} ${{ steps.evaluate.outputs.report-url }}"

      # - name: Run Fortify on Demand SAST & SCA Scan
      #   uses: fortify/github-action@v2
      #   with:
      #     sast-scan: true
      #     debricked-sca-scan: true
      #   env:
      #     FOD_URL: https://ams.fortify.com
      #     FOD_TENANT: ${{secrets.FOD_TENANT}}
      #     FOD_USER: ${{secrets.FOD_USER}}
      #     FOD_PASSWORD: ${{secrets.FOD_PAT}}
      #     FOD_CLIENT_ID: ${{secrets.FOD_CLIENT_ID}}
      #     FOD_CLIENT_SECRET: ${{secrets.FOD_CLIENT_SECRET}}

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.PUBLISHED_ROOT}}
        